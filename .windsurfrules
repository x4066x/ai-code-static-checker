# Static Analysis Requirements

Before modifying or adding code, execute the following static analysis checks:

1. Check Symbol References
   Command: npm run analyze analyze-symbol <symbol-name>
   Example: npm run analyze analyze-symbol handleApiRequest

2. Check File References
   Command: npm run analyze check-file <file-path>
   Example: npm run analyze check-file ./src/newFeature.ts

Execute these checks at the following times:
- Before modifying existing functions or classes
- After creating new files
- Before modifying components or interfaces
- Before performing refactoring

Based on analysis results:
- If references are found, ensure all referencing files are properly updated
- If no references are found, verify if the code is necessary or potentially dead
- Clearly identify the scope of changes and ensure all necessary modifications are made

Best Practices:
1. Pre-modification Checks
   - Identify all references to the target symbol
   - Document the impact scope
   - Plan necessary modifications

2. Post-modification Verification
   - Verify new reference relationships
   - Validate any unreferenced symbol warnings
   - Check for circular dependencies

3. Documentation
   - Document significant changes in reference relationships
   - Update relevant documentation if public APIs are modified
   - Note any technical debt or future improvements needed